import { updateUser } from "./controllers/userController";
import { Question, User } from "./entity/user";
import { clearEmotionAndEspace } from "./function";

export const conversation = async (user: User, data: any) => {

    if (user.conversation) {
        let buttonId = data.webMessage.message?.buttonsResponseMessage?.selectedButtonId;
        switch (user.question) {
            case Question.Name:
                if (buttonId === 'id1') {
                    if (user.nome.length > 5) {
                        user.question = Question.Operadora;
                        await updateUser(user);
                        await data.presenceTime(1000, 2000);
                        return await data.sendButton(`${user.nome} qual sua operadora?`, 'Vivo ou Tim', 'Oi ou Claro')
                    } else {
                        user.question = Question.NewName;
                        await updateUser(user);
                        await data.presenceTime(1000, 1000);
                        await data.sendText(true, '‚ùå Seu nome n√£o √© v√°lido, digite nome e sobrenome!')
                    }
                } else if (buttonId === 'id2') {
                    user.question = Question.NewName;
                    await updateUser(user);
                    await data.presenceTime(1000, 1000);
                    await data.sendText(true, 'Como posso lhe chamar?');
                } else {
                    await data.presenceTime(1000, 1000);
                    await data.sendText(true, 'Por favor selecione uma op√ß√£o para continuar seu atendimento.');
                }
                break;
            case Question.NewName:
                user.nome = clearEmotionAndEspace(await data.webMessage.message.conversation);
                user.question = Question.Name;
                await updateUser(user);
                await data.presenceTime(1000, 1000);
                await data.sendButton(`Posso lhe chamar por *${user.nome}*?`, 'Sim', 'N√£o');
                break;
            case Question.Operadora:
                if (buttonId === 'id1') {
                    user.operadora = 'Vivo ou Tim';
                    user.question = Question.Info;
                    await updateUser(user)
                    await data.presenceTime(1000, 2000);
                    await data.reply('üòç √ìtimo essas s√£o as melhores operadora para ter nossa internet m√≥vel!');
                    await data.presenceTime(1000, 2000);
                    await data.sendText(false, `${user.nome} recomendamos ter dois chip em seu smartphone para garantir um melhor servi√ßo.`);
                } else if (buttonId === 'id2') {
                    user.operadora = 'Oi e Claro';
                    user.question = Question.Info;
                    await data.presenceTime(1000, 2000);
                    await data.reply('üòê Essas operadoras n√£o s√£o as melhores, mais n√£o desanime fa√ßa um teste!');
                    await data.presenceTime(1000, 2000);
                    await data.sendText(false, `${user.nome} recomendamos ter dois chip em seu smartphone para garantir um melhor servi√ßo.`);
                } else {
                    await data.presenceTime(1000, 2000);
                    await data.sendText(true, 'Por favor selecione uma op√ß√£o para continuar seu atendimento.');
                }
                break;
            default:
                break
        }

        if (user.question === Question.Info) {
            user.conversation = false;
            await updateUser(user);
            await data.presenceTime(3000, 7000);
            await data.sendText(true, `‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\n               üî∞ *Informa√ß√µes* üî∞ \n‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\n \n‚úÖNossa internet funciona por aplicativo, √© ilimitada *dura o m√™s todo*.\n‚úÖVc precisa ter um smartphone android ( _n√£o funciona em iphone_ )\n‚úÖPrecisa instalar nosso aplicativo em seu smartphone\n‚úÖN√£o fazemos devolu√ß√£o de pagamento, fa√ßa seu teste antes.`);
            await data.presenceTime(2000, 8000);
            await data.sendMenu(user.nome);
        }
    }
}